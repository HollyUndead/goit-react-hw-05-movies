{"version":3,"file":"static/js/919.2cdc3b4f.chunk.js","mappings":"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","sources":["components/movie-cast-item/movie-cast-item.jsx","components/movie-cast/movie-cast.jsx","components/movie-reviews-item/movie-reviews-item.jsx","components/movie-reviews/movie-reviw.jsx","components/movie-detail-navlinks/movie-detail-navlinks.jsx","components/movie-detail/movie-detail.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import './movie-cast-item.css';\nconst noImg = require('../../img/png-transparent-black-and-white-no-to-camera-logo-video-on-demand-retail-website-simple-no-miscellaneous-television-text.png');\n\nexport const MovieCastItem = ({ ...props }) => {\n  const { actorName, actorRole, actorPhoto } = props;\n  const profilePhoto = `https://image.tmdb.org/t/p/w500${actorPhoto}`;\n  return (\n    <li className=\"cast-list--item\">\n      <p className=\"actor-name\">{actorName}</p>\n      <p className=\"role\">Character: {actorRole}</p>\n      <img\n        className=\"actor-photo\"\n        src={actorPhoto === null ? noImg : profilePhoto}\n        alt=\"\"\n      />\n    </li>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { MovieCastItem } from 'components/movie-cast-item/movie-cast-item';\nimport './movie-cast.css';\n\nexport const MovieCast = ({ ...props }) => {\n  const { idForFetch } = props;\n  const [cast, setCast] = useState();\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await axios.get(\n          `https://api.themoviedb.org/3/movie/${idForFetch}/credits?api_key=b76e2e4e0948108c3961a907afb4d0c6`\n        );\n        console.log(res.data.cast);\n        setCast(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n    /* eslint-disable-next-line */\n  }, []);\n  if (cast === undefined) {\n    return <></>;\n  }\n  return (\n    <ul className=\"cast-list\">\n      {cast.cast.map(el => {\n        return (\n          <MovieCastItem\n            actorName={el.name}\n            actorRole={el.character}\n            actorPhoto={el.profile_path}\n            key={el.cast_id}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n","export const MovieReviewItem = ({ ...props }) => {\n  const { author, content } = props.movieReview;\n  return (\n    <li>\n      <h2 style={{ display: 'inline' }}>Author: {author}</h2>\n      <p>{content}</p>\n    </li>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { MovieReviewItem } from 'components/movie-reviews-item/movie-reviews-item';\n\nexport const MovieReview = ({ ...props }) => {\n  const { idForFetch } = props;\n  const [review, setReview] = useState();\n  useEffect(() => {\n    async function fetchData() {\n      console.log(idForFetch);\n      try {\n        const res = await axios.get(\n          `https://api.themoviedb.org/3/movie/${idForFetch}/reviews?api_key=b76e2e4e0948108c3961a907afb4d0c6`\n        );\n        console.log(res.data.results);\n        setReview(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n    /* eslint-disable-next-line */\n  }, []);\n  console.log(review);\n\n  if (review === undefined) {\n    return <></>;\n  }\n  return (\n    <ul className=\"review-list\">\n      {review.results.map(el => {\n        return <MovieReviewItem movieReview={el} key={el.id} />;\n      })}\n    </ul>\n  );\n};\n","import { MovieCast } from 'components/movie-cast/movie-cast';\nimport { MovieReview } from 'components/movie-reviews/movie-reviw';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieDetailNavlinks = ({ ...props }) => {\n  const { castPath, reviwPath, idForFetch } = props;\n  console.log(idForFetch);\n\n  return (\n    <div>\n      <h4>Addithinal information</h4>\n      <div className=\"router\">\n        <NavLink className=\"cast\" to={castPath}>\n          Cast\n        </NavLink>\n        <NavLink className=\"review\" to={reviwPath}>\n          Review\n        </NavLink>\n      </div>\n      {window.location.href.includes('cast') ? (\n        <MovieCast idForFetch={idForFetch} />\n      ) : (\n        <></>\n      )}\n      {window.location.href.includes('review') ? (\n        <MovieReview idForFetch={idForFetch} />\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n};\n","import axios from 'axios';\nimport { StateContext } from 'components/App';\nimport { Loader } from 'components/loader/loader';\nimport { useEffect, useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { MovieDetailNavlinks } from 'components/movie-detail-navlinks/movie-detail-navlinks';\nimport './movie-detail.css';\n\nconst MovieDetail = () => {\n  const [movie, setMovie] = useState();\n  const [loading, setLoading] = useState(true);\n  const { movieId, setMovieId } = useContext(StateContext);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    let idForFetch = movieId;\n    async function fetchData() {\n      try {\n        const res = await axios.get(\n          `https://api.themoviedb.org/3/movie/${idForFetch}?api_key=b76e2e4e0948108c3961a907afb4d0c6`\n        );\n        if (idForFetch !== undefined) {\n          localStorage.setItem('movieId', idForFetch);\n        }\n        setMovie(res.data);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    if (idForFetch === undefined) {\n      const movieIdLocal = localStorage.getItem('movieId');\n      if (movieIdLocal !== null) {\n        setMovieId(movieIdLocal);\n        idForFetch = movieIdLocal;\n      } else {\n        navigate('/');\n        return;\n      }\n    }\n    fetchData();\n    /* eslint-disable-next-line */\n  }, []);\n\n  let imgSrc, userScore, genres, castPath, reviwPath;\n\n  if (movie !== undefined) {\n    imgSrc = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n    userScore = Math.round(movie.vote_average * 10);\n    genres = movie.genres.map(el => el.name).join(', ');\n    castPath = `/goit-react-hw-05-movies/movie/${movieId}/cast`;\n    reviwPath = `/goit-react-hw-05-movies/movie/${movieId}/review`;\n  }\n\n  return (\n    <div>\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"movie-wraper\">\n          <button type=\"button\" className=\"go-back\">\n            Go back\n          </button>\n          <div className=\"main-info-wrap\">\n            <img className=\"movie-poster\" src={imgSrc} alt=\"\" />\n            <div className=\"main-info\">\n              <h2 className=\"movie-name\">{movie.title}</h2>\n              <p className=\"movie-user-score\">User score: {userScore}%</p>\n              <h3>Overview</h3>\n              <p className=\"overview\">{movie.overview}</p>\n              <h3>Genres</h3>\n              <p className=\"genres\">{genres}</p>\n            </div>\n          </div>\n          <MovieDetailNavlinks\n            castPath={castPath}\n            reviwPath={reviwPath}\n            idForFetch={movieId}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\nexport default MovieDetail;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["noImg","require","MovieCastItem","props","actorName","actorRole","actorPhoto","profilePhoto","className","src","alt","MovieCast","idForFetch","useState","cast","setCast","useEffect","axios","res","console","log","data","fetchData","undefined","map","el","name","character","profile_path","cast_id","MovieReviewItem","movieReview","author","content","style","display","MovieReview","review","setReview","results","id","MovieDetailNavlinks","castPath","reviwPath","to","window","location","href","includes","imgSrc","userScore","genres","movie","setMovie","loading","setLoading","useContext","StateContext","movieId","setMovieId","navigate","useNavigate","localStorage","setItem","movieIdLocal","getItem","poster_path","Math","round","vote_average","join","type","title","overview","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err"],"sourceRoot":""}