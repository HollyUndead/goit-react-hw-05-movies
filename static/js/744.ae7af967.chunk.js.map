{"version":3,"file":"static/js/744.ae7af967.chunk.js","mappings":"8MAGMA,EAAQC,EAAQ,KAETC,EAAY,SAAC,GAAkB,IAAbC,EAAY,oBACjCC,GAAeC,EAAAA,EAAAA,YAAWC,EAAAA,GAA1BF,WACAG,EAAUJ,EAAVI,MACFC,GAAWC,EAAAA,EAAAA,MACXC,GAAkBC,EAAAA,EAAAA,MAOlBC,EAAO,yCAAqCL,EAAMM,aACxD,OACE,gBAAIC,UAAU,aAAaC,QARX,WAChBX,EAAWG,EAAMS,IACjBR,EAAS,UAAD,OAAWD,EAAMS,IAAM,CAC7BC,MAAOP,GAEV,EAGC,WACE,gBACEQ,IAA2B,OAAtBX,EAAMM,YAAuBD,EAAUZ,EAC5CmB,IAAI,GACJL,UAAU,wBAEZ,cAAGA,UAAU,cAAb,SAA4BP,EAAMa,UAGvC,C,wJC2BD,EA/CqB,WACnB,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMf,GAAWC,EAAAA,EAAAA,OAUjBe,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAaC,OAAOC,SAASC,KAC7BC,EAAeJ,EAAWK,QAAQ,UAAY,GAC9B,IAAlBD,GACFE,EAAUN,EAAWO,MAAMH,GAE9B,GAAE,IAEH,IAAME,EAAS,mCAAG,WAAME,GAAN,iEAChBC,EAAAA,EAAAA,IAAA,kHAE+GD,EAF/G,gCAIGE,MAAK,SAAAC,GACJb,EAAaa,EAAIC,KAAKC,QACvB,IAPa,2CAAH,sDAUf,OACE,4BACE,kBAAMxB,UAAU,cAAcyB,SA5Bb,SAAAC,GACnBA,EAAGC,iBACH,IAAIC,EAAiBF,EAAGG,OAAOC,UAAUC,MACzCrC,EAAS,iBAAD,OAAkBkC,IAC1BF,EAAGG,OAAOG,QACVf,EAAUW,EACX,EAsBG,WACE,kBAAOK,KAAK,OAAOC,KAAK,YAAYlC,UAAU,sBAC9C,mBAAQiC,KAAK,SAASjC,UAAU,gBAAhC,wBAIF,eAAIA,UAAU,aAAd,SACGQ,EAAU2B,KAAI,SAAAC,GACb,OAAO,SAAC,IAAD,CAAW3C,MAAO2C,GAASA,EAAGlC,GACtC,QAIR,C","sources":["components/movie-item/movie-item.jsx","pages/search-movies/search-movies.jsx"],"sourcesContent":["import { StateContext } from 'components/App';\nimport { useContext } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nconst noImg = require('../../img/png-transparent-black-and-white-no-to-camera-logo-video-on-demand-retail-website-simple-no-miscellaneous-television-text.png');\n\nexport const MovieItem = ({ ...props }) => {\n  const { setMovieId } = useContext(StateContext);\n  const { movie } = props;\n  const navigate = useNavigate();\n  const currentLocation = useLocation();\n  const sendMovie = () => {\n    setMovieId(movie.id);\n    navigate(`/movie/${movie.id}`, {\n      state: currentLocation,\n    });\n  };\n  const imgPath = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n  return (\n    <li className=\"movie-item\" onClick={sendMovie}>\n      <img\n        src={movie.poster_path !== null ? imgPath : noImg}\n        alt=\"\"\n        className=\"movie-item--poster\"\n      />\n      <p className=\"movie-title\">{movie.title}</p>\n    </li>\n  );\n};\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { MovieItem } from 'components/movie-item/movie-item';\nimport './search-movie.css';\n\nconst SearchMovies = () => {\n  const [movieList, setMovieList] = useState([]);\n  const navigate = useNavigate();\n\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    let queryForSearch = ev.target.movieName.value;\n    navigate(`/movies?query=${queryForSearch}`);\n    ev.target.reset();\n    fetchData(queryForSearch);\n  };\n\n  useEffect(() => {\n    const currentUrl = window.location.href;\n    const indexOfQueru = currentUrl.indexOf('query=') + 6;\n    if (indexOfQueru !== -1) {\n      fetchData(currentUrl.slice(indexOfQueru));\n    }\n  }, []);\n\n  const fetchData = async query => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/search/movie?api_key=b76e2e4e0948108c3961a907afb4d0c6&language=en-US&query=${query}&page=1&include_adult=false`\n      )\n      .then(res => {\n        setMovieList(res.data.results);\n      });\n  };\n\n  return (\n    <div>\n      <form className=\"search-form\" onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"movieName\" className=\"input-movie-name\" />\n        <button type=\"submit\" className=\"search-button\">\n          Search\n        </button>\n      </form>\n      <ul className=\"movie-list\">\n        {movieList.map(el => {\n          return <MovieItem movie={el} key={el.id} />;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default SearchMovies;\n"],"names":["noImg","require","MovieItem","props","setMovieId","useContext","StateContext","movie","navigate","useNavigate","currentLocation","useLocation","imgPath","poster_path","className","onClick","id","state","src","alt","title","useState","movieList","setMovieList","useEffect","currentUrl","window","location","href","indexOfQueru","indexOf","fetchData","slice","query","axios","then","res","data","results","onSubmit","ev","preventDefault","queryForSearch","target","movieName","value","reset","type","name","map","el"],"sourceRoot":""}